let tile_types = 10;

fun tile_to_str tile_num {
    if tile_num == 0: '-'
    else if tile_num == 1: '^'
    else if tile_num == 2: 'T'
    else if tile_num == 3: 'X'
    else if tile_num == 4: '|'
    else if tile_num == 5: '='
    else if tile_num == 6: '~'
    else if tile_num == 7: '*'
    else: ':'
}

pub struct Map {
    def map = [], width, height

    fun Map w h {
        self.width <- w;
        self.height <- h;
        for _ in 0 .. h {
            let var row = [];
            for _ in 0 .. w {
                row.push_back(random(0, tile_types))
            }
            self.map.push_back(row)
        }

    }
    
    /**
     * Gets the tile number at location (x, y)
     * If the position is out of bounds, returns None
     */
    pub fun get x y {
        if x < 0 || x >= *self.width || y < 0 || y >= *self.height:
            None
        else:
            self.map[y][x]
    }

    /**
     * Displays the map to the console in a textual grid
     */
    pub fun display {
        for row in *self.map {
            for tile in row {
                cout(tile_to_str(tile), ' ')
            }
            coutln()
        }
    }
}